{"version":3,"sources":["../../src/middlewares/auth.js"],"names":[],"mappings":"AAAA;;;;;;AAMA;AACA,a;;AAEA,uC;AACA,4B;;AAEA;;;AAGA,IAAM,OAAO,SAAP,IAAO,GAAW;AACpB,8FAAO,iBAAM,GAAN,EAAW,IAAX;AACC,6BAAC,IAAI,OAAL,IAAgB,CAAC,IAAI,OAAJ,CAAY,IAD9B;AAEC,gCAAI,IAAJ,CAAS,IAAT,EAAe,GAAf,EAAoB,MAApB,EAFD;;;AAKG,sCALH,iEAAP;;AAOH,CARD;;AAUA;;;AAGA,IAAM,cAAc,SAAd,WAAc,CAAC,KAAD,EAAW;AAC3B,WAAO,sBAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,YAAI,UAAU,oBAAI,OAAJ,CAAY,KAAZ,EAAmB,gBAAnB,CAAd;AACA,YAAI,CAAC,OAAL,EAAc;AACV,mBAAO,OAAO,EAAE,QAAQ,YAAV,EAAwB,SAAS,CAAC,GAAlC,EAAP,CAAP;AACH;AACD,YAAI,QAAQ,GAAR,IAAe,KAAK,GAAL,EAAnB,EAA+B;AAC3B,mBAAO,OAAO,EAAE,QAAQ,cAAV,EAA0B,SAAS,CAAC,GAApC,EAAP,CAAP;AACH;AACD,eAAO,QAAQ,OAAR,CAAP;AACH,KATM,CAAP;AAUH,CAXD;;AAaA;;;AAGA,IAAM,aAAa,SAAb,UAAa,GAAW;AAC1B,+FAAO,kBAAM,GAAN,EAAW,IAAX;AACC,iCADD,GACS,IAAI,MAAJ,CAAW,aAAX,IAA4B,IADrC;AAEH,oCAAQ,GAAR,eAAwB,KAAxB;AACA,gCAAI,CAAC,KAAL,EAAY;AACR,oCAAI,IAAJ,CAAS,IAAT,EAAe,CAAC,CAAhB,EAAmB,WAAnB;AACH,6BALE;;;AAQoB,4CAAY,KAAZ,CARpB,SAQK,MARL;AASC,gCAAI,OAAJ,CAAY,IAAZ,GAAmB,MAAnB;AACA,mCAVD;;AAYC,oCAAQ,KAAR;AACA,gCAAI,IAAJ,CAAS,IAAT,EAAe,CAAC,EAAhB,EAAoB,aAAI,OAAxB,EAbD,8EAAP;;;AAgBH,CAjBD,C;;AAmBI,I,GAAA,I;AACA,U,GAAA,U","file":"auth.js","sourcesContent":["/*\r\n * @Author: fengyun2\r\n * @Date:   2016-07-21 11:22:40\r\n * @Last Modified by:   fengyun2\r\n * @Last Modified time: 2016-07-21 11:48:34\r\n */\r\n///<reference path=\"../../typings/index.d.ts\" />\r\n\"use strict\";\r\n\r\nimport jwt from 'jwt-simple';\r\nimport util from 'util';\r\n\r\n/*\r\n * 校验会话\r\n */\r\nconst auth = function() {\r\n    return async(ctx, next) => {\r\n        if (!ctx.session || !ctx.session.user) {\r\n            ctx.send(null, 999, \"会话失效\");\r\n            return;\r\n        }\r\n        await next()\r\n    }\r\n}\r\n\r\n/*\r\n * 解密token\r\n */\r\nconst getUserInfo = (token) => {\r\n    return new Promise((resolve, reject) => {\r\n        let decoded = jwt.decoded(token, 'BLOG_APi_LOGIN');\r\n        if (!decoded) {\r\n            return reject({ retMsg: '解析token失败!', retCode: -100 })\r\n        }\r\n        if (decoded.exp <= Date.now()) {\r\n            return reject({ retMsg: '登录已过期,请重新登录!', retCode: -401 })\r\n        }\r\n        return resolve(decoded);\r\n    })\r\n};\r\n\r\n/*\r\n * 验证token\r\n */\r\nconst checkToken = function() {\r\n    return async(ctx, next) => {\r\n        let token = ctx.header.authorization || null;\r\n        console.log(`token~~~ ${token}`);\r\n        if (!token) {\r\n            ctx.send(null, -1, 'token 缺失!')\r\n        }\r\n        try {\r\n            // 解析token\r\n            let result = await getUserInfo(token);\r\n            ctx.session.auth = result;\r\n            next();\r\n        } catch (err) {\r\n            console.error(`checkToken: JSON.stringify(err)`);\r\n            ctx.send(null, -99, err.message);\r\n        }\r\n    }\r\n}\r\nexport {\r\n    auth,\r\n    checkToken,\r\n}"]}